"""add filter columns

Revision ID: 9c71ca3a4254
Revises: 33e97fab1034
Create Date: 2022-05-12 10:38:28.402465

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9c71ca3a4254'
down_revision = '33e97fab1034'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'cluster', ['cluster_id', 'target_id'])
    op.add_column('fluxstd', sa.Column('filter_g', sa.String(), nullable=True, comment='g-band filter (g_hsc, g_ps1, g_sdss, etc.)'))
    op.add_column('fluxstd', sa.Column('filter_r', sa.String(), nullable=True, comment='r-band filter (r_hsc, r_ps1, r_sdss, etc.)'))
    op.add_column('fluxstd', sa.Column('filter_i', sa.String(), nullable=True, comment='i-band filter (i_hsc, i_ps1, i_sdss, etc.)'))
    op.add_column('fluxstd', sa.Column('filter_z', sa.String(), nullable=True, comment='z-band filter (z_hsc, z_ps1, z_sdss, etc.)'))
    op.add_column('fluxstd', sa.Column('filter_y', sa.String(), nullable=True, comment='y-band filter (y_hsc, y_ps1, y_sdss, etc.)'))
    op.add_column('fluxstd', sa.Column('filter_j', sa.String(), nullable=True, comment='j-band filter (j_mko, etc.)'))
    op.create_unique_constraint(None, 'fluxstd', ['fluxstd_id'])
    op.create_unique_constraint(None, 'input_catalog', ['input_catalog_id'])
    op.create_unique_constraint(None, 'proposal', ['proposal_id'])
    op.create_unique_constraint(None, 'proposal_category', ['proposal_category_id'])
    op.create_unique_constraint(None, 'sky', ['sky_id'])
    op.add_column('target', sa.Column('filter_g', sa.String(), nullable=True, comment='g-band filter (g_hsc, g_ps1, g_sdss, etc.)'))
    op.add_column('target', sa.Column('filter_r', sa.String(), nullable=True, comment='r-band filter (r_hsc, r_ps1, r_sdss, etc.)'))
    op.add_column('target', sa.Column('filter_i', sa.String(), nullable=True, comment='i-band filter (i_hsc, i_ps1, i_sdss, etc.)'))
    op.add_column('target', sa.Column('filter_z', sa.String(), nullable=True, comment='z-band filter (z_hsc, z_ps1, z_sdss, etc.)'))
    op.add_column('target', sa.Column('filter_y', sa.String(), nullable=True, comment='y-band filter (y_hsc, y_ps1, y_sdss, etc.)'))
    op.add_column('target', sa.Column('filter_j', sa.String(), nullable=True, comment='j-band filter (j_mko, etc.)'))
    op.create_unique_constraint(None, 'target', ['target_id'])
    op.create_unique_constraint(None, 'target_type', ['target_type_id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'target_type', type_='unique')
    op.drop_constraint(None, 'target', type_='unique')
    op.drop_column('target', 'filter_j')
    op.drop_column('target', 'filter_y')
    op.drop_column('target', 'filter_z')
    op.drop_column('target', 'filter_i')
    op.drop_column('target', 'filter_r')
    op.drop_column('target', 'filter_g')
    op.drop_constraint(None, 'sky', type_='unique')
    op.drop_constraint(None, 'proposal_category', type_='unique')
    op.drop_constraint(None, 'proposal', type_='unique')
    op.drop_constraint(None, 'input_catalog', type_='unique')
    op.drop_constraint(None, 'fluxstd', type_='unique')
    op.drop_column('fluxstd', 'filter_j')
    op.drop_column('fluxstd', 'filter_y')
    op.drop_column('fluxstd', 'filter_z')
    op.drop_column('fluxstd', 'filter_i')
    op.drop_column('fluxstd', 'filter_r')
    op.drop_column('fluxstd', 'filter_g')
    op.drop_constraint(None, 'cluster', type_='unique')
    # ### end Alembic commands ###
